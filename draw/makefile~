# Pick a platform below.  X11 for Linux/Mac/Unix, and WIN32 for windows.
# In either X11 or WIN32, Postscript is also simultaneously available.
# You can also pick NO_GRAPHICS, which will allow your code to compile without
# change on any platform, but no graphics will display (all calls are stubbed
# out).
# 
# Compiling to support X11 requires the X11 development libraries. On Ubuntu, use
# 'sudo apt-get install libx11-dev' to install.
# Please look online for information on how to install X11 on other Linux distributions.

# Please note that a Mac can run the X11 graphics if the X11 library is installed.

PLATFORM = X11
#PLATFORM = WIN32
#PLATFORM = NO_GRAPHICS
ROOT=/u/c/rendongx/ece1387/project3

HDR = branching.h calculator.h draw_graph.h graphics.h extern.h easygl_constants.h file_extract.h
SRC = branching.cpp calculator.cpp draw_graph.cpp graphics.cpp extern.cpp file_extract.cpp bound_branch.cpp
EXE = test
BACKUP_FILENAME=`date "+backup-%Y%m%d-%H%M.zip"`
FLAGS = -g -Wall -Wl,--stack,0x10000000 -D$(PLATFORM) -std=c++0x -I$(ROOT)/draw
# Need to tell the linker to link to the X11 libraries.
# WIN32 automatically links to the win32 API libraries (no need for flags)

ifeq ($(PLATFORM),X11)
   GRAPHICS_LIBS = -lX11
endif

#include umfpack.mk

$(EXE): branching.o calculator.o draw_graph.o graphics.o extern.o file_extract.o bound_branch.o
	g++ $(FLAGS) branching.o calculator.o draw_graph.o graphics.o extern.o file_extract.o bound_branch.o $(GRAPHICS_LIBS) -o $(EXE)
branching.o: branching.cpp $(HDR)
	g++ -c $(FLAGS) branching.cpp
calculator.o: calculator.cpp $(HDR)
	g++ -c $(FLAGS) calculator.cpp

draw_graph.o: draw_graph.cpp $(HDR)
	g++ -c $(FLAGS) draw_graph.cpp

graphics.o: graphics.cpp $(HDR)
	g++ -c $(FLAGS) graphics.cpp

extern.o: extern.cpp $(HDR)
	g++ -c $(FLAGS) extern.cpp

file_extract.o: file_extract.cpp $(HDR)
	g++ -c $(FLAGS) file_extract.cpp

bound_branch.o: bound_branch.cpp $(HDR)
	g++ -c $(FLAGS) bound_branch.cpp

backup:
# Back up the source, makefile and Visual Studio project & solution. 
	echo Backing up your files into ${BACKUP_FILENAME}
	zip ${BACKUP_FILENAME} $(SRC) $(HDR) makefile easygl.sln easygl.vcxproj

clean:
	rm $(EXE) *.o
