int main()
{
	
	int m = 0;
	double num[200];
	ifstream file;
	file.open("C:\\Users\\ThinkPad\\Desktop\\circuit.txt");
	while (!file.eof())
	{
		file >> num[m++];
	}
	int n = num[0];//need modified to auto extract data from num
	int w = num[1];
	int p = num[14];
	int q = num[15];
	int x = num[17];
	int y = num[18];
	int z = num[19];
	int **a = new int*[2 * n + 1];
	for (int k = 0; k<2 * n + 1; k++) {
		a[k] = new int[2 * n + 1];
	}
	for (int i = 0; i < 2 * n + 1; i++){
		//cout << i;
		for (int j = 0; j < 2 * n + 1; j++){
			if (i % 2 == 0){
				if (j % 2 == 0){
					a[i][j] = 0;//switch blocks are 0
					//	cout << a[i][j];
					//cout << j;
				}
				else
					a[i][j] = 1;//pathes are 1
				//cout << a[i][j];
			}
			else {
				if (j % 2 == 1){
					a[i][j] = 0;//logic blocks are 0
				}
				else
					a[i][j] = 1;// paths are 1
			}
		}

	}
	//cout << a[1][0] << endl;
	a[2 * p + 2][2 * q] = 's';//we use the swicth behind source logic to be source
	a[2 * x + 2][2 * y] = 't';//we use the swicth behind target logic to be target
	cout << a[2 * x + 2][2 * y] << endl;
	cout << a[2 * p + 2][2 * q] << endl;
	int *rng = new int[2];
	rng[0] = 8;// need improve to auto assign
	rng[1] = 0;
	van recv;
	recv.n = 0;
	recv.fifo = a;//bad naming fifo is used to receive 2n+1,2n+1 matrix
	recv.grid = rng;//used to recive expansion list
	recv.l = 2;
	recv.con_num = 0;
	recv.pl = 0;
	recv.n_con = 2;
	recv.w_con = 0;
	recv.t_con = 0;
	//van ne;
	//ne.n = 5;
	//ne.fifo = recv.fifo;
	//ne.grid = recv.grid;
	for (recv.con_num = 0; recv.n == 0; recv.con_num = recv.con_num + 2){
		recv = path(recv, n);
		cout << "finish a loop" << endl;
		//cout << recv.n << endl;
	}
	int source[2] = { 8, 0 };
	int init_arr[2] = { 6, 6 };
	cout << recv.pl << endl;
	int pass_len = recv.pl;
	draw(recv.fifo, init_arr, source, pass_len,n);
	system("pause");
	return 0;
}